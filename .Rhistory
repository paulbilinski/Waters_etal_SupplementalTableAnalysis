abline(h=0,lty=2,col="black")
lines(obs2~dist2,lwd=3,type="b",pch=19)
obs= c(0.090305, 0.147618, 0.162297, 0.140258, 0.178793, 0.191847, 0.156222, 0.164609, 0.168343, 0.168008, 0.140708, 0.127806, -0.163995, -0.668802, -0.696578, -0.110785, 0.0110918, -0.00839416, -0.138222, -0.0581009)
dist= c(3952, 14667,27836,44191,57129,72194,88512,108082,133937,154200,173869,214495,4152471,4227609,4389532,7855756,7939774,8034828,24296925,24497230.48)
dist=dist/1e7
high=c(-0.0148586,-0.0323903,-0.0369397,-0.0413932,-0.0331664,-0.0427323,-0.0476222,-0.0438453,-0.0439681,-0.0358738,-0.0384431,-0.0475312,-0.0539594,-0.0823602,-0.0832511,-0.0593707,-0.0713035,-0.0712908,-0.07662,-0.111019)
low=c(0.0155423,0.0312079,0.0370663,0.041736,0.0331168,0.0413345,0.0454948,0.0428654,0.0430432,0.0361812,0.0387847,0.0475988,0.0533768,0.0761364,0.0774109,0.0566324,0.0687351,0.0688107,0.0714848,0.0958494)
polyy=c(high,rev(low))
polyx=c(dist,rev(dist))
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x", ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1.5,labels=c(0,".1Kb","1Kb","10Kb","1Mb","10Mb","100Mb"))
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1.5,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), xlab= "Distance (bp)")
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1.5,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"))
polyy=c(high,rev(low))
polyx=c(dist,rev(dist))
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1.5,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"))
polygon(polyx,polyy,col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(h=0,lty=2,col="black")
lines(obs~dist,lwd=3,type="b",pch=19)
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1.5,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), sub="Test")
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1.5,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), mtext("Distance in bp", side=1))
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1.5,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), mtext("Distance in bp", side=1))
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), mtext("Distance in bp", side=1))
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), mtext("Distance in bp", side=1, line=1.5))
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), mtext("Distance in bp", side=1, line=2))
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), mtext("Distance in bp", side=1, line=2, cex=1.5))
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), mtext("Distance in bp", side=1, line=2.2, cex=1.5))
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), mtext("Distance (bp)", side=1, line=2.2, cex=1.5))
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), mtext("Distance (bp)", side=1, line=2.5, cex=1.5))
plot(obs2~dist2,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1.5,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), mtext("Distance (bp)", side=1, line=2.5, cex=1.5))
plot(obs2~dist2,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), mtext("Distance (bp)", side=1, line=2.5, cex=1.5))
polyy=c(high,rev(low))
polyx=c(dist,rev(dist))
plot(obs~dist,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), mtext("Distance (bp)", side=1, line=2.5, cex=1.5))
polygon(polyx,polyy,col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(h=0,lty=2,col="black")
lines(obs~dist,lwd=3,type="b",pch=19)
polyy2=c(high2,rev(low2))
polyx2=c(dist2,rev(dist2))
plot(obs2~dist2,lwd=3,xlab="",type="b",pch=19,log="x",ylab="Moran's I",cex.lab=1.5,xaxt="n"); axis(side=1,at=c(0,.001,.01,.1,1,10,100),cex.axis=1,labels=c(0,"1Kb","10Kb","100Kb","1Mb","10Mb","100Mb"), mtext("Distance (bp)", side=1, line=2.5, cex=1.5))
polygon(polyx2,polyy2,col=rgb(0.5,0.5,0.5,0.5),border=NA)
abline(h=0,lty=2,col="black")
lines(obs2~dist2,lwd=3,type="b",pch=19)
fix(dist)
## Tutorial 1 for Luke Mahler's CPB Workshop on Phylogenetically Correct Stats
install.packages(c("ggplot2","gtable","scales","plyr"))
install_github('ggplot2')
install.packages('devtools')
library('devtools')
install_github('ggplot2')
dev_mode()
install_github('ggplot2')
install.packages(c("ggplot2","gtable","scales","plyr"))
library(ggplot2, lib.loc="~/pkg/Rpackages/ggplot2/")
R.version
sessionInfo
package_version("ggplot2")
library(ggplot2, lib.loc="~/pkg/Rpackages/ggplot2/")
package_version("ggplot2")
library(ggplot2, lib.loc="~/pkg/Rpackages/")
install.packages(c("ggplot2","gtable","scales","plyr"))
install.packages(c("ggplot2", "gtable", "scales", "plyr"))
library("ggplot2")
package_version(ggplot2)
library("ggplot2",lib="/var/folders/nl/mlk6j9v94nqb1ghx_pqwlrdm0000gn/T//RtmpGTBApu/downloaded_packages")
install.packages("ggplot2",lib="/var/folders/nl/mlk6j9v94nqb1ghx_pqwlrdm0000gn/T//RtmpGTBApu/downloaded_packages")
install.packages("ggplot2", lib = "/var/folders/nl/mlk6j9v94nqb1ghx_pqwlrdm0000gn/T//RtmpGTBApu/downloaded_packages")
install.packages("ggplot2",lib="/var/folders/nl/mlk6j9v94nqb1ghx_pqwlrdm0000gn/T//RtmpGTBApu/downloaded_packages")
ggplot(trio_non,aes(factor(kind),obs))+                                  geom_violin(scale="width",lwd=1,outlier.size=0.2)+                          geom_point(data=trio_imp,aes(as.numeric(kind)+0.03,obs),size=3.5,alpha=0.25,color="red")+                                                                 xlab("")+                                                                   geom_point(data=trio_conserved,aes(as.numeric(kind)-0.03,obs),size=3.5,color="blue",alpha=0.25)+                                                              scale_y_log10("dn/ds",breaks=c(0.001,0.005,0.01,0.1,0.05,0.5,1,5))+            theme(axis.title.y=element_text(size=18),axis.text.x=element_text(size=16))
##
library(ggplot)
library(ggplot2)
ggplot(trio_non,aes(factor(kind),obs))+                                  geom_violin(scale="width",lwd=1,outlier.size=0.2)+                          geom_point(data=trio_imp,aes(as.numeric(kind)+0.03,obs),size=3.5,alpha=0.25,color="red")+                                                                 xlab("")+  scale_y_continuous(limits = c(0,1))+                                                                 geom_point(data=trio_conserved,aes(as.numeric(kind)-0.03,obs),size=3.5,color="blue",alpha=0.25)+
theme(axis.title.y=element_text(size=18),axis.text.x=element_text(size=16))
bob=runif(10000)
qplot(bob)
qplot(bob,geom="violin")
version(ggplot2)
?ggplot2
??ggplot2
version()
version
version
maize <- (0.000243288,0.000420787,0.0007282,0.000264653,0.000215375,0.000254834,0.000188934,0.000307994,0.000383015,0.000295688,0.000243137,0.000441848,0.000301729,0.000278858,0.000350578,0.00030508,0.00031904,0.000204097,0.000188831,0.000259326,0.000281721,0.000178788,0.000320181,0.000345922,0.000334766,0.000534486,0.000180484,0.000177492,0.000411135,0.000340817,0.000249606,0.000280819,0.00022649,0.000223648,0.000281322,0.000239501,0.000307823,0.000515402,0.000188446,0.000279379,0.000313612,0.000212929,0.000316297,0.000272439,0.000371093,0.000269548,0.00023051,0.000185672,0.000214184,0.000372872,0.000409862,0.000351057,0.000321902,0.000299221,0.00015391,0.000249511,0.000503699,0.00034608,0.000347207,0.000361345,0.000211445,0.000289993,0.000192353,0.000423033,0.000173083,0.000244206,0.000238475,0.000252807,0.000274996,0.000247698,0.000204939,0.000209669,0.000278129,0.00017869,0.000258175,0.000353171,0.000209358,0.000280392,0.000313769,0.00020835,0.000205673,0.000325662,0.000167503,0.000333236,0.000218765,0.000360487,0.000252839,0.000252931,0.00024467,0.000221545,0.000245168,0.000222443,0.000201728)
maize <- c(0.000243288,0.000420787,0.0007282,0.000264653,0.000215375,0.000254834,0.000188934,0.000307994,0.000383015,0.000295688,0.000243137,0.000441848,0.000301729,0.000278858,0.000350578,0.00030508,0.00031904,0.000204097,0.000188831,0.000259326,0.000281721,0.000178788,0.000320181,0.000345922,0.000334766,0.000534486,0.000180484,0.000177492,0.000411135,0.000340817,0.000249606,0.000280819,0.00022649,0.000223648,0.000281322,0.000239501,0.000307823,0.000515402,0.000188446,0.000279379,0.000313612,0.000212929,0.000316297,0.000272439,0.000371093,0.000269548,0.00023051,0.000185672,0.000214184,0.000372872,0.000409862,0.000351057,0.000321902,0.000299221,0.00015391,0.000249511,0.000503699,0.00034608,0.000347207,0.000361345,0.000211445,0.000289993,0.000192353,0.000423033,0.000173083,0.000244206,0.000238475,0.000252807,0.000274996,0.000247698,0.000204939,0.000209669,0.000278129,0.00017869,0.000258175,0.000353171,0.000209358,0.000280392,0.000313769,0.00020835,0.000205673,0.000325662,0.000167503,0.000333236,0.000218765,0.000360487,0.000252839,0.000252931,0.00024467,0.000221545,0.000245168,0.000222443,0.000201728)
boxplot(maize)
mexicana <- c(0.000194565,0.000209394,0.000224359,0.000176406,0.000191685,0.000196367,0.000138161,0.000184193,0.000170928,0.000172307,0.000216541,0.000193271,0.000236062,0.000275838,0.000223766,0.000268088,0.000231231,0.00022779,0.00022417,0.000255155,0.000191771,0.000198458,0.000336323,0.000212135,0.000258419,0.000223491,0.000225127,0.00025027,0.000427945,0.000148933,0.000252082,0.000305335,0.000310588,0.000187799,0.000310219,0.000268711,0.000253136,0.000280746,0.000250217,0.000185433,0.000337336,0.000335585,0.000205528,0.000245666,0.000193419,0.000149093,0.00034561,0.000241672,0.000267783,0.0002579,0.000281078,0.000161879,0.000278261,0.000291737,0.000229042,0.000202529,0.000183355,0.000163081,0.000253334,0.000197232,0.000159004,0.000327777,0.000322628,0.000247064,0.000251434,0.000266636,0.000166458,0.000232567,0.00018443,0.000176942,0.00015586,0.000163077,0.000167449,0.000171629,0.000166618,0.000166422,0.000171802,0.000226244,0.000274684,0.000169373,0.000195637,0.000213736,0.000181026,0.000142775,0.00016751,0.000147684,0.000197156,0.000230117,0.000284895,0.000188771,0.000182104,0.000193186,0.000208481,0.000217062,0.000226678,0.000226157,0.000237868,0.000172674,0.000114102,0.000356113,0.00026249,0.000366907,0.000235928,0.000184114,0.000239265)
boxplot(maize,mexicana)
parv <-c(0.000245979,0.000206485,0.000176135,0.000184783,0.000217043,0.000295088,0.00028492,0.000279434,0.000237969,0.000127694,0.000262363,0.000304507,0.000184433,0.000142491,0.000149769,0.000311451,0.000203998,0.000245539,0.000259671,0.000393453,0.000443019,0.000348688,0.000184784,0.000219025,0.000215007,0.000244364,0.000210528,0.000293428,0.000353173,0.000258183,0.000258901,0.000291406,0.000274361,0.000323937,0.000214076,0.000358523,0.000352743,0.000295025,0.00022391,0.000226226,0.000247862,0.000266292,0.000282061,0.000223304,0.000238354,0.000181689,0.000167309,0.000160881,0.000170241,0.000264072,0.000156834,0.000171286,0.000148214,0.000300148,0.000343122,0.000145695,0.000277402)
boxplot(maize,parv,mexicana)
?boxplot
boxplot(maize,parv,mexicana,names=("MZ","PV","MX"))
boxplot(maize,parv,mexicana,names=c("MZ","PV","MX"))
play <- c(10024,2320,466,296,2012,28340,2315,474,1223,8846,1506,154,17420,20182,23410,13196,10089,6600,7453,1983,1712,12200,7256,2024,1407,3085,12597,1585,774,16646,6557,15653,2338,3093,2633,1242,9825,16468,156,313,310,4500,2643,1204,156,625,1860,15457,3282,6228,1340,722,1084,156,5596,30914,4732,6120,3750,11912,4485,6895,5711,7161,13056,3290,9688,1399,1569,5074,156,2629,10247,2639,474,1249,4750,4032,12825,156,7029,8168,5889,167,3260,156,4674,8571,2076,8105,10025,2476,7162,7913,8981,1863,3301,1700,7307,6241,156,2485,5861,142,2179,7992,795,1391,3270,1867,6323,763,2805,7890,5772,20601,1381,4158,14868,21445,773,3073,7070,3785,13754,6022,11961,9718,20262,1517,2438,4286,4350,5184,14851,4356,7786,2023,155,17200,927,17065,7923,7801,3731,5498,2508,9670,6870,1866,2674,3395,7361,310,8121,476,8307,58816,24968,14335,10999,1244,8684,4546,6115,3056,7976,25140,34101,933,1261,16069,9060,14331,622,17889,10742,1556,2943,5536,10023,295,6759,3526,318,4879,2494,3102,1555,2340,4684,5915,3101,11047,25143,3748,8072,13070,156,4192,32964,4993,9501,11179,927,4977,469,7437,8867,935,1866,2460,3318,1088,8583,12274,787,17695,469,10653,2631,1404,1560,156,781,463,313,3858,777,2825,1721,4349,2623,1263,23390,11044,3542,5607,84011,9137,28441,156,47057,4557,3429,4500,3295,2643)
hist(play)
length(subset(play,play>20000))
n <- 44
k <- seq(0,n,by=1)
1 - sum(dbinom(k, 52, .625))
hist(play,xlab="Cluster Size", main="Histogram of CentC Cluster Size")
rptProb <- function(mu, l, i) {
choose(L, i) * mu^i * (1-mu)^(L-i) * ( 1 - (1 - mu)^i - i * (mu) * (1 - mu)^ (i-1) )
}
temp <- (1:150)
apply(rptProb(3*10^-8,150,temp))
apply(rptProb(3*10^-8,150,temp))
apply(rptProb((3*10^-8),150,temp))
apply(temp,function(x) rptProb(3*10^-8,150,x))
?apply
sapply(temp,function(x) rptProb(3*10^-8,150,x))
rptProb <- function(mu, L, i) {
choose(L, i) * mu^i * (1-mu)^(L-i) * ( 1 - (1 - mu)^i - i * (mu) * (1 - mu)^ (i-1) )
}
temp <- (1:150)
sapply(temp,function(x) rptProb(3*10^-8,150,x))
sum(sapply(temp,function(x) rptProb(3*10^-8,150,x)))
choose (12162,2) * sum(sapply(temp,function(x) rptProb(3*10^-8,150,x)))
choose (12162,2) * sum(sapply(temp,function(x) rptProb(3*10^-8,156,x)))
(1 * 10^6) * choose (12162,2) * sum(sapply(temp,function(x) rptProb(3*10^-8,156,x)))
(1 * 10^6) * choose (12162,2) * sum(sapply(temp,function(x) rptProb(10^-2,156,x)))
choose (12162,2) * sum(sapply(temp,function(x) rptProb(10^-2,156,x)))
load("~/PCoA_x.RData")
plot(x$values)
summary(x$values)
head(x$values)
summary(x$values)
summary(x)
summary(x$vectors)
plot(x$vectors[,1],x$vectors[,2])
plot(x$vectors[,1],x$vectors[,3])
plot(x$vectors[,1],x$vectors[,2],xlim=c(-.1,.1))
length(x$vectors[,1])
plot(x$vectors[,2],x$vectors[,3],xlim=c(-.1,.1))
plot(x$vectors[,2],x$vectors[,3],xlim=c(-.1,.1))
head(x$values[,1])
plot(x$vectors[,2],x$vectors[,3],xlim=c(-.05,.05))
plot(x$vectors[,1],x$vectors[,2],xlim=c(-.05,.05))
plot(x$vectors[,1],x$vectors[,2])
plot(x$vectors[,1],x$vectors[,2],ylim=c(-.1,.1),xlim=c(-.1,.1))
plot(x$vectors[,1],x$vectors[,2],pch=16,cex=0.5)
plot(x$vectors[,1],x$vectors[,2],pch=16,cex=0.5,ylim=c(-.1,.1),xlim=c(-.1,.1))
plot(x$vectors[,1],x$vectors[,2],pch=16,col=rgb(1,1,1,.5),cex=0.5,ylim=c(-.1,.1),xlim=c(-.1,.1))
plot(x$vectors[,1],x$vectors[,2],pch=16,col=rgb(0,0,0,.5),cex=0.5,ylim=c(-.1,.1),xlim=c(-.1,.1))
plot(x$vectors[,1],x$vectors[,2],pch=16,col=rgb(0,0,0,.5),cex=0.5,ylim=c(-.1,.1),xlim=c(-.1,.1),xlab="PCoA 1",ylab="PCoA 2")
plot(x$vectors[,1],x$vectors[,2],pch=16,col=rgb(0,0,0,.3),cex=0.5,ylim=c(-.1,.1),xlim=c(-.1,.1),xlab="PCoA 1",ylab="PCoA 2")
plot(x$vectors[,1],x$vectors[,2],pch=16,col=rgb(0,0,0,.3),cex=0.4,ylim=c(-.1,.1),xlim=c(-.1,.1),xlab="PCoA 1",ylab="PCoA 2")
ACT <- c(4.144998893,2.696380113,1.778154301,1.306155879,1.057945637,0.425255007,0.375910877,0.349254422,0.329129267,0.312693377,0.29122967)
ACT <- range(10:20)
fix(ACT)
?range
ACT <- (10:20)
ACT <- sample(10:20)
fix(ACT)
fix(ACT)
ACT
?sample
ACT <- c(10,11,12,13,14,15,16,17,18,19,20)
ACT
plot(value~ACT)
value <- c(4.144998893,2.696380113,1.778154301,1.306155879,1.057945637,0.425255007,0.375910877,0.349254422,0.329129267,0.312693377,0.29122967)
ACT <- c(10,11,12,13,14,15,16,17,18,19,20)
plot(value~ACT)
plot(value~ACT,xlab="Alignment Candidate Threshold",ylab="Percent Mapping")
lineplot(value~ACT,xlab="Alignment Candidate Threshold",ylab="Percent Mapping")
abline(value,ACT)
plot(value~ACT,xlab="Alignment Candidate Threshold",ylab="Percent Mapping",type="o")
setwd("~/Documents/Projects/Springer_Imprinting/PNAS_SupplementalTableGeneration/Waters_etal_SupplementalTableAnalysis/Waters_etal_SupplementalTableAnalysis")
Schnablemaize1 <- read.csv("MaizeSubgenome1.csv")
Schnablemaize2 <- read.csv("MaizeSubgenome2.csv")
Waters_subset <- read.csv("Waters_Genesubset.csv")
MEGS <- read.csv("List1_Megs.csv")
colnames(MEGS) <- c("locus")
PEGS <- read.csv("List2_Pegs.csv")
MEGS <- read.csv("List1_Megs.csv")
colnames(MEGS) <- c("locus")
PEGS <- read.csv("List2_Pegs.csv")
colnames(PEGS) <- c("locus")
colnames(Waters_subset)[1] <- "locus"
Not <- Waters_subset$locus
NotMegs <- setdiff(Waters_subset$locus, MEGS$name2)
NotMegsPegs <- setdiff(NotMegs, PEGS$name2)
ExcludedMP <- as.data.frame(x=NotMegsPegs)
colnames(ExcludedMP)[1] <- "locus"
Not <- Waters_subset$locus
NotMegs <- setdiff(Waters_subset$locus, MEGS$name2)
NotMegsPegs <- setdiff(NotMegs, PEGS$name2)
ExcludedMP <- as.data.frame(x=NotMegsPegs)
colnames(ExcludedMP)[1] <- "locus"
subgenome1 <- as.data.frame(Schnablemaize1)
colnames(subgenome1)[1] <- "locus"
Not <- Waters_subset$locus
NotMegs <- setdiff(Waters_subset$locus, MEGS$name2)
NotMegsPegs <- setdiff(NotMegs, PEGS$name2)
ExcludedMP <- as.data.frame(x=NotMegsPegs)
colnames(ExcludedMP)[1] <- "locus"
subgenome1 <- as.data.frame(Schnablemaize1)
colnames(subgenome1)[1] <- "locus"
colnames(ExcludedMP)[1] <- "locus"
watersinsubgenome1 <- merge(subgenome1, ExcludedMP, by="locus")
subgenome2 <- as.data.frame(Schnablemaize2)
colnames(subgenome2)[1] <- "locus"
watersinsubgenome2 <- merge(subgenome2, ExcludedMP, by="locus")
colnames(MEGS)[1] <- "locus"
colnames(PEGS)[1] <- "locus"
megsinsubgenome1 <- merge(subgenome1, MEGS, by="locus")
megsinsubgenome2 <- merge(subgenome2, MEGS, by="locus")
pegsinsubgenome1 <- merge(subgenome1, PEGS, by="locus")
pegsinsubgenome2 <- merge(subgenome2, PEGS, by="locus")
##Generation of Table S6, Domestication Candidates
fgs_1 <- read.csv("FGS_v1_genes.csv")
fgs_1_nodp <- subset(fgs_1, !duplicated(fgs_1[,1]))
colnames(fgs_1_nodp)[1] <- "locus"
refgen1waters <- merge(fgs_1_nodp,Waters_subset,by="locus")
colnames(fgs_1_nodp)[1] <- "locus"
refgen1megs <- merge(fgs_1_nodp,MEGS)
refgen1pegs <- merge(fgs_1_nodp,PEGS)
length(refgen1waters$locus)
length(refgen1megs$locus)
length(refgen1pegs$locus)
improv <- read.csv("improvement_candidates.csv",header=FALSE)
improv <- read.csv("improvement_candidates.csv",header=FALSE)
domest <- read.csv("domestication_candidates.csv",header=FALSE)
colnames(improv)[1] <- "locus"
colnames(domest)[1] <- "locus"
colnames(MEGS)[1] <- "locus"
colnames(PEGS)[1] <- "locus"
colnames(MEGS)[1] <- "locus"
length(merge(refgen1waters,domest,by="locus")$locus)
length(merge(PEGS,domest,by="locus")$locus)
length(merge(MEGS,domest,by="locus")$locus)
length(merge(refgen1waters,improv,by="locus")$locus)
length(merge(PEGS,improv,by="locus")$locus)
length(merge(MEGS,improv,by="locus")$locus)
##Generation of Table S7, Population Genetic Statistics for Imprinted Genes
#Analysis of Popgen stats
full <- read.csv("Sorghum_Zearefgen2_knks.csv")
data <- subset(full, full$Ks<1)
MEGS <- read.csv("List1_Megs.csv")
MEGS_dnds <- merge(data,MEGS,by="name2")
PEGS <- read.csv("List2_Pegs.csv")
PEGS_dnds <- merge(data,PEGS,by="name2")
KnKs6 <- subset(data,data$KnKs<6)
computeall <- read.csv("Fullcompute.csv")
colnames(KnKs6)[20] <- "locus"
MEGS <- read.csv("List1_Megs.csv")
colnames(MEGS) <- c("locus")
PEGS <- read.csv("List2_Pegs.csv")
colnames(PEGS) <- c("locus")
Not <- Waters_subset$locus
NotMegs <- setdiff(Waters_subset$locus, MEGS$name2)
NotMegsPegs <- setdiff(NotMegs, PEGS$name2)
ExcludedMP <- as.data.frame(x=NotMegsPegs)
colnames(ExcludedMP)[1] <- "locus"
computesyn <- subset(computeall, computeall$sitetype=="SYN")
computesyn <- subset(computeall, computeall$sitetype=="SYN")
computesynMZ <- subset(computesyn, computesyn$taxa=="mz")
dadcomputesynMZ <- merge(computesynMZ,PEGS,by="locus")
momcomputesynMZ <- merge(computesynMZ,MEGS,by="locus")
stats <- read.delim("Maize_Genestats.txt", header=TRUE, sep="\t", na.strings="NA")
stats <- cbind(stats, stats$ThetaPi / stats$seqbp)
data <- subset(full, full$Ks<1)
MEGS <- read.csv("List1_Megs.csv")
MEGS_dnds <- merge(data,MEGS,by="name2")
PEGS <- read.csv("List2_Pegs.csv")
PEGS_dnds <- merge(data,PEGS,by="name2")
KnKs6 <- subset(data,data$KnKs<6)
computeall <- read.csv("Fullcompute.csv")
colnames(KnKs6)[20] <- "locus"
MEGS <- read.csv("List1_Megs.csv")
colnames(KnKs6)[20] <- "locus"
MEGS <- read.csv("List1_Megs.csv")
colnames(MEGS) <- c("locus")
PEGS <- read.csv("List2_Pegs.csv")
colnames(PEGS) <- c("locus")
Not <- Waters_subset$locus
NotMegs <- setdiff(Waters_subset$locus, MEGS$name2)
NotMegsPegs <- setdiff(NotMegs, PEGS$name2)
ExcludedMP <- as.data.frame(x=NotMegsPegs)
colnames(ExcludedMP)[1] <- "locus"
computesyn <- subset(computeall, computeall$sitetype=="SYN")
computesynMZ <- subset(computesyn, computesyn$taxa=="mz")
dadcomputesynMZ <- merge(computesynMZ,PEGS,by="locus")
momcomputesynMZ <- merge(computesynMZ,MEGS,by="locus")
stats <- read.delim("Maize_Genestats.txt", header=TRUE, sep="\t", na.strings="NA")
stats <- cbind(stats, stats$ThetaPi / stats$seqbp)
stats <- read.delim("Maize_Genestats.txt", header=TRUE, sep="\t", na.strings="NA")
stats <- cbind(stats, stats$ThetaPi / stats$seqbp)
colnames(stats)[8] <- "ThetaPibp"
MEGS <- read.csv("List1_Megs.csv")
momstats <- merge(stats,MEGS,by="name2")
PEGS <- read.csv("List2_Pegs.csv")
dadstats <- merge(stats,PEGS,by="name2")
Waters_subset <- read.csv("Waters_Genesubset.csv")
colnames(Waters_subset)[1] <- "locus"
colnames(stats)[1] <- "locus"
Waters_synMZ <- merge(Waters_subset,computesynMZ,by="locus")
Waters_stats <- merge(Waters_subset,stats,by="locus")
Waters_synMZ_noMP <- merge(Waters_synMZ, ExcludedMP, by="locus")
Waters_stats_noMP <- merge(Waters_stats, ExcludedMP, by="locus")
Waters_KnKs <- merge(Waters_subset,KnKs6,by="locus")
Waters_KnKs_noMP <- merge(Waters_KnKs, ExcludedMP, by="locus")
#Hprime
summary(Waters_synMZ_noMP$Hprime)
summary(dadcomputesynMZ$Hprime)
summary(momcomputesynMZ$Hprime)
wilcox.test(dadcomputesynMZ$Hprime, Waters_synMZ_noMP$Hprime)
wilcox.test(momcomputesynMZ$Hprime, Waters_synMZ_noMP$Hprime)
synfindfull <- read.csv("SynfindOrthologs.csv")
synfindorthos <- na.omit(synfindfull)
View(synfindorthos)
SynfindOrthologs <- subset(temp1, !duplicated(temp1$Zeamays))
full <- read.csv("Sorghum_Zearefgen2_knks.csv")
data <- subset(full, full$Ks>0)
MEGS <- read.csv("List1_Megs.csv")
PEGS <- read.csv("List2_Pegs.csv")
KnKs6 <- subset(data,data$KnKs<6)
colnames(KnKs6)[8] <- "Sorghumbicolor"
colnames(KnKs6)[20] <- "Zeamays"
synfindfull <- read.csv("SynfindOrthologs.csv")
synfindorthos <- na.omit(synfindfull)
#length(unique(synfindorthos$Zeamays))
#synfindorthos$Zeamays[duplicated(synfindorthos$Zeamays)]
temp1 <- merge(KnKs6,synfindorthos, by=c("Zeamays","Sorghumbicolor"))
SynfindOrthologs <- subset(temp1, !duplicated(temp1$Zeamays))
Waters_subset <- read.csv("Waters_Genesubset.csv")
colnames(Waters_subset)[1] <- "Zeamays"
Waters_KnKs <- merge(Waters_subset,SynfindOrthologs,by="Zeamays")
Waters_subset <- read.csv("Waters_Genesubset.csv")
colnames(Waters_subset)[1] <- "Zeamays"
Waters_Synfind_KnKs <- merge(Waters_subset,SynfindOrthologs,by="Zeamays")
View(Waters_Synfind_KnKs)
temp2 <- merge(Waters_subset,SynfindOrthologs,by="Zeamays")
Waters_Synfind_KnKs <- !duplicated(temp2$Zeamays)
Waters_Synfind_KnKs <- subset(temp2, !duplicated(temp2$Zeamays))
View(Waters_Synfind_KnKs)
Waters_subset <- read.csv("Waters_Genesubset.csv")
colnames(Waters_subset)[1] <- "Zeamays"
Waters_KnKs <- merge(Waters_subset,SynfindOrthologs,by="Zeamays")
#write.csv(Waters_KnKs, "~/SynfindOrthologsWaters_DnDs.csv")
Not <- Waters_subset$Zeamays
NotMegs <- setdiff(Waters_subset$Zeamays, MEGS$Zeamays)
NotMegsPegs <- setdiff(NotMegs, PEGS$Zeamays)
ExcludedMP <- as.data.frame(x=NotMegsPegs)
colnames(ExcludedMP)[1] <- "Zeamays"
Waters_KnKs_noMP <- merge(Waters_KnKs, ExcludedMP, by="Zeamays")
colnames(PEGS)[1] <- "Zeamays"
colnames(MEGS)[1] <- "Zeamays"
PEGS_dnds <- merge(Waters_KnKs,PEGS,by="Zeamays")
MEGS_dnds <- merge(Waters_KnKs,MEGS,by="Zeamays")
PEGS_dnds <- subset(PEGS_dnds, !duplicated(PEGS_dnds$Zeamays))
zvz <- read.csv("CDS_zeavzea.csv")
Schnablemaize1 <- read.csv("MaizeSubgenome1.csv")
Schnablemaize2 <- read.csv("MaizeSubgenome2.csv")
Waters_subset <- read.csv("Waters_Genesubset.csv")
MEGS <- read.csv("List1_Megs.csv")
colnames(MEGS) <- c("locus")
PEGS <- read.csv("List2_Pegs.csv")
colnames(PEGS) <- c("locus")
colnames(Waters_subset)[1] <- "locus"
Not <- Waters_subset$locus
NotMegs <- setdiff(Waters_subset$locus, MEGS$name2)
NotMegsPegs <- setdiff(NotMegs, PEGS$name2)
ExcludedMP <- as.data.frame(x=NotMegsPegs)
colnames(ExcludedMP)[1] <- "locus"
subgenome1 <- as.data.frame(Schnablemaize1)
colnames(subgenome1)[1] <- "locus"
colnames(ExcludedMP)[1] <- "locus"
watersinsubgenome1 <- merge(subgenome1, ExcludedMP, by="locus")
subgenome2 <- as.data.frame(Schnablemaize2)
colnames(subgenome2)[1] <- "locus"
watersinsubgenome2 <- merge(subgenome2, ExcludedMP, by="locus")
colnames(MEGS)[1] <- "locus"
colnames(PEGS)[1] <- "locus"
megsinsubgenome1 <- merge(subgenome1, MEGS, by="locus")
megsinsubgenome2 <- merge(subgenome2, MEGS, by="locus")
pegsinsubgenome1 <- merge(subgenome1, PEGS, by="locus")
pegsinsubgenome2 <- merge(subgenome2, PEGS, by="locus")
zvz <- read.csv("CDS_zeavzea.csv")
zvzname1 <- data.frame(DNDS=zvz$DNDS, name=zvz$name1)
zvzname2 <- data.frame(DNDS=zvz$DNDS, name=zvz$strand2)
zvznames <- rbind(zvzname1, zvzname2)
duplicated(zvznames$name)
unique(zvznames$name)
colnames(zvz)[8] <- "locus"
temp1 <- merge(watersinsubgenome1, zvz, by="locus")
colnames(zvz)[8] <- "name1"
colnames(zvz)[20] <- "locus"
temp2 <- merge(watersinsubgenome1, zvz, by="locus")
watersinsubgenome1_dnds <- merge(temp1, temp2, by="locus") #if exists in column 1 remove from column 2
zvz <- read.csv("CDS_zeavzea.csv")
colnames(zvz)[8] <- "locus"
temp1 <- merge(watersinsubgenome2, zvz, by="locus")
colnames(zvz)[8] <- "name1"
colnames(zvz)[20] <- "locus"
temp2 <- merge(watersinsubgenome2, zvz, by="locus")
watersinsubgenome2_dnds <- merge(temp1, temp2, by="locus")
#Megs in subgenomes
zvz <- read.csv("CDS_zeavzea.csv")
colnames(zvz)[8] <- "locus"
temp1 <- merge(megsinsubgenome1, zvz, by="locus")
colnames(zvz)[8] <- "name1"
colnames(zvz)[20] <- "locus"
temp2 <- merge(megsinsubgenome1, zvz, by="locus")
megsinsubgenome1_dnds <- merge(temp1, temp2, by="locus")
zvz <- read.csv("CDS_zeavzea.csv")
colnames(zvz)[8] <- "locus"
temp1 <- merge(megsinsubgenome2, zvz, by="locus")
colnames(zvz)[8] <- "name1"
colnames(zvz)[20] <- "locus"
temp2 <- merge(megsinsubgenome2, zvz, by="locus")
megsinsubgenome2_dnds <- merge(temp1, temp2, by="locus")
#Pegs in subgenomes
zvz <- read.csv("CDS_zeavzea.csv")
colnames(zvz)[8] <- "locus"
temp1 <- merge(pegsinsubgenome1, zvz, by="locus")
colnames(zvz)[8] <- "name1"
colnames(zvz)[20] <- "locus"
temp2 <- merge(pegsinsubgenome1, zvz, by="locus")
pegsinsubgenome1_dnds <- merge(temp1, temp2, by="locus",all=TRUE)
zvz <- read.csv("CDS_zeavzea.csv")
colnames(zvz)[8] <- "locus"
temp1 <- merge(pegsinsubgenome2, zvz, by="locus")
colnames(zvz)[8] <- "name1"
colnames(zvz)[20] <- "locus"
temp2 <- merge(pegsinsubgenome2, zvz, by="locus")
pegsinsubgenome2_dnds <- merge(temp1, temp2, by="locus", all=TRUE)
##Generation of Table S6, Domestication Candidates
View(watersinsubgenome1)
setwd("~/Documents/Projects/Springer_Imprinting/ParalogFiles")
library(plyr)
#get data
x<-read.table("newblasts",header=T)
#make subset where query=subject
y=subset(x,as.character(x$query_id)==as.character(x$subject_id))
#get max length for each gene
long_y=ddply(y,.(query_id),summarise,full_length=max(length))
#summarize length and %id for each pair
sum_x=ddply(x,.(query_id,subject_id),summarise,length=sum(length),id=mean(identity))
#merge and make table of all hits with summed length
long_x<-merge(sum_x,long_y)
#calculate percentage
percent_length <- as.data.frame(long_x$length/long_x$full_length)
long_xall <- cbind(long_x,percent_length)
colnames(long_xall)[6] <- "perclength"
long_xall <- as.data.frame(long_xall)
#minimum length 75%
long_x75=long_xall[which(long_xall$perclength>=0.75),]
#long_x75 <- subset(long_xall, long_xall$%length>=0.75)
#minimum ID 90%
long_x75_90=long_x75[which(long_x75$id>=90),]
#minimum 95%
long_x75_95=long_x75[which(long_x75$id>=95),]
#Above90
query_parent75_90 <- as.data.frame(long_x75_90$query_id)
query_parent75_90 <- as.data.frame(substr(long_x75_90$query_id, 1, 13))
colnames(query_parent75_90)[1]<-"query_parent"
subject_parent75_90 <- as.data.frame(long_x75_90$subject_id)
subject_parent75_90 <- as.data.frame(substr(long_x75_90$subject_id, 1, 13))
colnames(subject_parent75_90)[1]<-"subject_parent"
full_x75_90 <- cbind(long_x75_90,query_parent75_90,subject_parent75_90)
final_x75_90 <- subset(full_x75_90, as.character(full_x75_90$query_parent) != full_x75_90$subject_parent)
above90 <- as.data.frame(unique(final_x75_90$query_id))
colnames(above90)[1]<-"query_id"
pegs <- read.csv("List2_Pegs_renamed.csv")
colnames(pegs)[1]<-"query_id"
above90pegs <- merge(pegs,above90,by="query_id")
megs <- read.csv("List1_Megs_renamed.csv")
colnames(megs)[1]<-"query_id"
above90megs <- merge(megs,above90,by="query_id")
Schnablemaize1 <- read.csv("MaizeSubgenome1.csv")
Schnablemaize2 <- read.csv("MaizeSubgenome2.csv")
Waters_subset <- read.csv("Waters_Genesubset.csv")
MEGS <- read.csv("List1_Megs.csv")
setwd("~/Documents/Projects/Springer_Imprinting/PNAS_SupplementalTableGeneration/Waters_etal_SupplementalTableAnalysis/Waters_etal_SupplementalTableAnalysis")
Schnablemaize1 <- read.csv("MaizeSubgenome1.csv")
Schnablemaize2 <- read.csv("MaizeSubgenome2.csv")
Waters_subset <- read.csv("Waters_Genesubset.csv")
MEGS <- read.csv("List1_Megs.csv")
colnames(MEGS) <- c("locus")
PEGS <- read.csv("List2_Pegs.csv")
colnames(PEGS) <- c("locus")
colnames(Waters_subset)[1] <- "locus"
Not <- Waters_subset$locus
NotMegs <- setdiff(Waters_subset$locus, MEGS$name2)
NotMegsPegs <- setdiff(NotMegs, PEGS$name2)
ExcludedMP <- as.data.frame(x=NotMegsPegs)
colnames(ExcludedMP)[1] <- "locus"
subgenome1 <- as.data.frame(Schnablemaize1)
colnames(subgenome1)[1] <- "locus"
colnames(ExcludedMP)[1] <- "locus"
watersinsubgenome1 <- merge(subgenome1, ExcludedMP, by="locus")
subgenome2 <- as.data.frame(Schnablemaize2)
colnames(subgenome2)[1] <- "locus"
watersinsubgenome2 <- merge(subgenome2, ExcludedMP, by="locus")
colnames(MEGS)[1] <- "locus"
colnames(PEGS)[1] <- "locus"
megsinsubgenome1 <- merge(subgenome1, MEGS, by="locus")
megsinsubgenome2 <- merge(subgenome2, MEGS, by="locus")
pegsinsubgenome1 <- merge(subgenome1, PEGS, by="locus")
pegsinsubgenome2 <- merge(subgenome2, PEGS, by="locus")
zvz <- read.csv("CDS_zeavzea.csv")
megsinsubgenome1 <- merge(subgenome1, MEGS, by="locus")
megsinsubgenome2 <- merge(subgenome2, MEGS, by="locus")
pegsinsubgenome1 <- merge(subgenome1, PEGS, by="locus")
pegsinsubgenome2 <- merge(subgenome2, PEGS, by="locus")
zvz <- read.csv("CDS_zeavzea.csv")
zvzname1 <- data.frame(DNDS=zvz$DNDS, name=zvz$name1)
zvzname2 <- data.frame(DNDS=zvz$DNDS, name=zvz$strand2)
zvznames <- rbind(zvzname1, zvzname2)
duplicated(zvznames$name)
unique(zvznames$name)
colnames(zvz)[8] <- "locus"
temp1 <- merge(watersinsubgenome1, zvz, by="locus")
